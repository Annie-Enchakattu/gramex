variables:
    USER_DATABASE_URL: sqlite:///$GRAMEXDATA/apps/guide/auth.db
    USER_DATABASE_TABLE: users
    USER_DATABASE_USERCOLUMN: user
    USER_DATABASE_PASSWORDCOLUMN: password
    USER_DATABASE_SALT: abc

url:
    auth/logout:
        pattern: /$YAMLURL/logout
        handler: LogoutHandler
        kwargs:
            log:
                fields: [session.id, current_user.email, request.remote_ip, request.headers.User-Agent]
            redirect:
                query: next
                url: /$YAMLURL

    auth/google:
        pattern: /$YAMLURL/google
        handler: GoogleAuth
        kwargs:
            # Credentials for s.anand/gramex-guide
            # https://console.developers.google.com/apis/credentials/oauthclient/817932882244-gdr59t3mpqh5554d1bgdjuh38g6a7ahh.apps.googleusercontent.com?project=gramex-guide
            # callback: /auth/google on localhost:9988/, localhost:9999/, learn.gramener.com/guide/
            key: 817932882244-gdr59t3mpqh5554d1bgdjuh38g6a7ahh.apps.googleusercontent.com
            secret: lwArXkw21KCqDPuJrel-WeQO
            log:
                fields: [session.id, current_user.email, request.remote_ip, request.headers.User-Agent]
            redirect:
                query: next
                url: /$YAMLURL

    auth/facebook:
        pattern: /$YAMLURL/facebook
        handler: FacebookAuth
        kwargs:
            # Test app (localhost:9988): https://developers.facebook.com/apps/794214110679951/settings/
            # key: '794214110679951'
            # secret: 'a026887ed94aef25f2f637bf154349df'

            # Production app: https://developers.facebook.com/apps/163328100435225/settings/
            key: '163328100435225'
            secret: 'c71c7e17d5a16ce7662ec75858e9631f'
            log:
                fields: [session.id, current_user.name, request.remote_ip, request.headers.User-Agent]
            redirect:
                query: next
                url: /$YAMLURL

    auth/twitter:
        pattern: /$YAMLURL/twitter
        handler: TwitterAuth
        kwargs:
            # Test app (127.0.0.1:9988): https://apps.twitter.com/app/12449610/keys
            # key: XkCVNZD5sfWECxHGAGnlHGQFa
            # secret: yU00bx5dHYMbge9IyO5H1KeC5uFnWndntG7u6CH6O4HDZHQg0p

            # Production app: https://apps.twitter.com/app/9510381/keys
            key: 5Ab9olPCo8OA8S1R2BY29FAxB
            secret: BgRPCvxaQsYU3QivHvrthwQA1vwDr22UQDLuUK8egqvgUid1md
            log:
                fields: [session.id, current_user.username, request.remote_ip, request.headers.User-Agent]
            redirect:
                query: next
                url: /$YAMLURL

    auth/ldap:
        pattern: /$YAMLURL/ldap                 # Map this URL
        handler: LDAPAuth                       # to the LDAP auth handler
        kwargs:
            template: $YAMLPATH/ldap.html       # This has the login form
            host: ipa.demo1.freeipa.org         # Server to connect to
            use_ssl: true                       # Whether to use SSL or not
            user: 'uid={user},cn=users,cn=accounts,dc=demo1,dc=freeipa,dc=org'
            password: '{password}'
            log:
                fields: [session.id, current_user.dn, request.remote_ip, request.headers.User-Agent]
            action:
                function: ensure_single_session
            redirect:
                query: next
                url: /$YAMLURL
                external: true

    auth/ldap2:
        pattern: /$YAMLURL/ldap2
        handler: LDAPAuth
        kwargs:
            template: $YAMLPATH/ldap.html
            host: ldap.forumsys.com
            use_ssl: false
            user: 'uid={user},dc=example,dc=com'
            password: '{password}'
            redirect:
                query: next
                url: /$YAMLURL
                external: true

    auth/db:
        pattern: /$YAMLURL/db
        handler: DBAuth
        kwargs:
            # This is created by schedule.create-user-database
            url: $USER_DATABASE_URL
            table: $USER_DATABASE_TABLE
            template: $YAMLPATH/db.html
            user:
                column: $USER_DATABASE_USERCOLUMN
                arg: user
            password:
                column: $USER_DATABASE_PASSWORDCOLUMN
                arg: password
                function: passlib.hash.sha256_crypt.encrypt
                args: =content
                kwargs: {salt: $USER_DATABASE_SALT}
            redirect:
                query: next
                url: /$YAMLURL

    auth/user:
        pattern: /$YAMLURL/user
        handler: FunctionHandler
        kwargs:
            function: json.dumps
            args: =handler.session['user']
            kwargs:
                indent: 4
            headers:
                Content-Type: application/json

    auth/session:
        pattern: /$YAMLURL/session
        handler: FunctionHandler
        kwargs:
            function: authutil.store_value
            headers:
                Content-Type: application/json

    auth/must-login:
        pattern: /$YAMLURL/must-login
        handler: FileHandler
        kwargs:
            path: $YAMLPATH/secret.html
            auth: true

    auth/dotcom:
        pattern: /$YAMLURL/dotcom
        handler: FileHandler
        kwargs:
            path: $YAMLPATH/secret.html
            auth:
                condition:                          # Allow only if condition is true
                    function: six.text_type.endswith              # Call this function
                    args: [=handler.current_user.email, '.com']   # with these 2 arguments
    auth/dotorg:
        pattern: /$YAMLURL/dotorg
        handler: FileHandler
        kwargs:
            path: $YAMLPATH/secret.html
            auth:
                condition:                          # Allow only if condition is true
                    function: six.text_type.endswith              # Call this function
                    args: [=handler.current_user.email, '.org']   # with these 2 arguments

    auth/en-male:
        pattern: /$YAMLURL/en-male
        handler: FileHandler
        kwargs:
            path: $YAMLPATH/secret.html
            auth:
                membership:           # The following user object keys must match
                    gender: male      # user.gender must be male
                    locale: [en, es]  # user.locale must be en or es

schedule:
    create-user-database:
        function: authutil.create_user_database     # Run this function
        kwargs:                                     # Pass the following parameters
            url: $USER_DATABASE_URL
            table: $USER_DATABASE_TABLE
            user: $USER_DATABASE_USERCOLUMN
            password: $USER_DATABASE_PASSWORDCOLUMN
            salt: $USER_DATABASE_SALT
        startup: true

import:
    apps: '*/gramex.yaml'
